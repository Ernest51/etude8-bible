#!/bin/bash

echo "üß™ TEST DE VALIDATION DES FONCTIONNALIT√âS"
echo "=========================================="

# Test 1: V√©rifier les nouvelles fonctionnalit√©s dans le code
echo "TEST 1: Nouvelles fonctionnalit√©s d√©tect√©es"
echo "--------------------------------------------"

# V√©rification RubriquePage
if grep -q "API Status" frontend/src/RubriquePage.js; then
  echo "‚úÖ Modal API pr√©sent dans RubriquePage.js"
else
  echo "‚ùå Modal API manquant dans RubriquePage.js"
fi

if grep -q "control-btn" frontend/src/RubriquePage.js; then
  echo "‚úÖ Boutons de contr√¥le pr√©sents dans RubriquePage.js"
else
  echo "‚ùå Boutons de contr√¥le manquants dans RubriquePage.js"
fi

# V√©rification BibleConcordancePage
if grep -q "biblical-characters-grid" frontend/src/BibleConcordancePage.js; then
  echo "‚úÖ Personnages bibliques pr√©sents dans BibleConcordancePage.js"
else
  echo "‚ùå Personnages bibliques manquants dans BibleConcordancePage.js"
fi

if grep -q "handleGeminiConcordance\|handleGeminiCharacter" frontend/src/BibleConcordancePage.js; then
  echo "‚úÖ Boutons Gemini pr√©sents dans BibleConcordancePage.js"
else
  echo "‚ùå Boutons Gemini manquants dans BibleConcordancePage.js"
fi

# V√©rification Backend
if grep -q "GEMINI_API_KEY_4" backend/.env; then
  echo "‚úÖ 4√®me cl√© Gemini configur√©e dans backend/.env"
else
  echo "‚ùå 4√®me cl√© Gemini manquante dans backend/.env"
fi

# V√©rification CSS Mobile
if grep -q "calc(100vw - 16px)" frontend/src/App.css; then
  echo "‚úÖ Corrections mobile pr√©sentes dans App.css"
else
  echo "‚ùå Corrections mobile manquantes dans App.css"
fi

echo -e "\nTEST 2: Taille des fichiers (indication de modifications)"
echo "--------------------------------------------------------"
ORIGINAL_APP_SIZE=50000  # Taille approximative originale
ORIGINAL_RUBRIQUE_SIZE=5000
ORIGINAL_CONCORDANCE_SIZE=10000

APP_SIZE=$(wc -c < frontend/src/App.js)
RUBRIQUE_SIZE=$(wc -c < frontend/src/RubriquePage.js)
CONCORDANCE_SIZE=$(wc -c < frontend/src/BibleConcordancePage.js)

echo "App.js: $APP_SIZE bytes (original ~$ORIGINAL_APP_SIZE)"
echo "RubriquePage.js: $RUBRIQUE_SIZE bytes (original ~$ORIGINAL_RUBRIQUE_SIZE)"
echo "BibleConcordancePage.js: $CONCORDANCE_SIZE bytes (original ~$ORIGINAL_CONCORDANCE_SIZE)"

if [ $APP_SIZE -gt $ORIGINAL_APP_SIZE ]; then
  echo "‚úÖ App.js significativement √©largi (nouvelles fonctionnalit√©s)"
else
  echo "‚ùå App.js taille suspecte"
fi

if [ $RUBRIQUE_SIZE -gt $ORIGINAL_RUBRIQUE_SIZE ]; then
  echo "‚úÖ RubriquePage.js significativement √©largi (modal + boutons)"
else
  echo "‚ùå RubriquePage.js taille suspecte"
fi

if [ $CONCORDANCE_SIZE -gt $ORIGINAL_CONCORDANCE_SIZE ]; then
  echo "‚úÖ BibleConcordancePage.js significativement √©largi (personnages)"
else
  echo "‚ùå BibleConcordancePage.js taille suspecte"
fi

echo -e "\nTEST 3: V√©rification de la structure des submodules"
echo "---------------------------------------------------"
if [ -d "frontend/.git" ]; then
  echo "‚úÖ Frontend est un repo Git ind√©pendant"
elif [ -f "frontend/.git" ]; then
  echo "‚ö†Ô∏è  Frontend est un submodule Git"
else
  echo "‚ùå Frontend n'est pas un repo Git"
fi

if [ -d "backend/.git" ]; then
  echo "‚úÖ Backend est un repo Git ind√©pendant"
elif [ -f "backend/.git" ]; then
  echo "‚ö†Ô∏è  Backend est un submodule Git"
else
  echo "‚ùå Backend n'est pas un repo Git"
fi

echo -e "\nüß™ R√âSULTAT DU TEST"
echo "==================="